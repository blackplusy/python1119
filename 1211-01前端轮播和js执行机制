前端第七课
计算器：
	getElementsByTagName按html标签取元素
	getElementsByClassName按类的名字来取元素
	取html里面的元素，所有的button,用循环的方法加onclick事件,引用用下载buttons[i]
	注意循环可能发生闭包,let解决闭包
	把按钮分类，分成数字和符号,用switch case来区分
	点击数字时把文本框里的值用叠加的方法（字符串连结）写到文本框里，document.getElementById("txt").value
	点击符号时:
		1、记住当前的符号+ - * /
		2、记住操作数1 num1
		3、之后要操作的数字会单独出现，不会叠加，可以设置标志位flag来表示显示一个数还是叠加的数
		4、如果要进行连加，你可以把num1的基础上连加,连续一种运算
		5、混合运算，把num1和num2混在一起来计算，得结果
	点击=等号:
		1\、取操作数num2
		2、根据op记录的操作符号+ - * /对num1和num2进行计算
setTimeout
setInterval
	1、setInterval做一个时间记录器
		new Date()获取当前时间
			getFullYear()取年
			getMonth()取月
			getDate()取日
			getDay()取星期
			getHour()取小时
			getMinute()取分钟
			getSecond()取秒
轮播
	css3属性:超出部分隐藏
		overflow:hidden;
	乘除
	考虑
		乘除:倍数
	取余 %
		是不是数的整数倍 
		a%b==0 a是b的整数倍 
	js函数:
		如果需要调用一段代码，这段代码不进行取名称调用解决不了问题的，这段代码取个名称，叫js函数
		function abc(){
		}
	思想:
		1、布局
			一个小盒子套一个大盒子，小盒子：1、宽高是一个图片的大小，2、position:relative 3、overflow:hidden;
			大盒子: 1、宽高是图片数量+1的宽度，高度和图片的高度一致，加的1就是第一张图片,2、position:absolute 3、定义left
			大盒子包的ul li,ul去圆点list-style:none 对于li需要在一行，需要float:left
		2、代码的逻辑:
			setInterval定时器控制大盒子的left值不断做减去一个步长
			注意:1、left减到图片的数量的负值时，要回到0值
			2、left值%图片长度，进行clearInterval停止计时器，最后再用setTimeout调用以上的代码逻辑，可以将这段代码逻辑放在函数中去调用
	按钮的实现
		1、div里面包含 ul li
			把这个div做position:absolute
			ul li设置:宽  高，宽=高, border-radius 为宽的一半，外间距，text-align文本对齐，line-height行间距
			line-height等于高就等于文本垂直居中
		2、获取该div下的所有li,用for循环取每一个元素，为其添加点击事件，注意闭包，用 let
			for(let i=0;i<lis.length;i++){
				lis[i].onclick=function(){
				}
			}
		 点击事件内部实现的逻辑是重新计算left值，把inner容器停在left的值上，最后调用setTimeout去2秒后执行上面的函数abc()
js执行机制
	js是一个单线程 。（线程就是两个同时执行的程序)，如果是单线程，很容易阻塞.异步的方法解决线程问题
	Promise答应，承诺,事先预判 
		先处理主线程不影响阻塞的内容，紧接着处理Promise（小事件),setTimeout setInterval认为大事件
