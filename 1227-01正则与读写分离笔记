正则表达式:
	以^开头，以$结尾
	r'^register/$' 地址标准正则表达式
	匹配数字 \d只表示一位数字
	\d+至少有一位
	\d*至少0位
	\w匹配字母数字下划线 \w+匹配多个
	\s字符串
	用中括号 
	[0-9a-zA-Z]表示中括号里面的内容只出现一次 
	[]中括号里面的东西不出现 ^ 如:[^0-9a-zA-Z]
	带()的就是正则需要接收的参数
	(\d+)
	{}可以有几位{4}限定4位
	电话号码
		^1[3,4,5,7,8]\d{9}$
	身份证码
		^\d{6}[19,20]\d{2}[01,02,03,04,05,06,07,08,09,10,11,12][0-31]{2}[0-9,X]{4}$
读写分离
	读写分离的必要性 ：
		提供一个数据库去读 
		提供一个数据库去写
		只有一个服务器负责写，其它服务器负责读 
		python类型:列表 元组
	django数据库读写分离
	后台实现:主从复制
	模拟读写分离
		需要两个数据库
			两个数据库结构一样
		插入两条不同的数据
		两个数据库分别要makemigrate
		改settings:
			复制一个的数据库设置，在'default'之后粘贴
			把复制后的数据库别名改一下
		在数据库配置下面加一句话:
		DATABASE_ROUTERS=[
			类写的路径
		]
			routers.MyRouter.MyReadWrite
		相当于建立routers文件夹，再下面建MyRouter文件,在文件里建一个类，类名是MyReadWrite
		在类里写两个方法;
			def db_for_read(self,model,**hints):
				return 'default'
			def db_for_write(self,model,**hints):
				return 'first'
			一个读的数据库别名，一个是写的数据库别名
			可以对数据库进行读写分离
		测试
			python3 manage.py shell
		读测试 
			User.objects.values()
		写测试:
			user=User()
			user.username='小集结'
			user.save()
		到两个数据库中去查看最终结果
